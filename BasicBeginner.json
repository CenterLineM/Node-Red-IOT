[{"id":"66107877.760ba8","type":"tab","label":"BasicBeginner"},{"id":"cfccce10.6a6ee","type":"debug","z":"66107877.760ba8","name":"每五秒跟NodeRed打招呼","active":true,"console":"false","complete":"payload","x":290,"y":220,"wires":[]},{"id":"805c0dc0.c1dc4","type":"inject","z":"66107877.760ba8","name":"計時器","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":90,"y":100,"wires":[["30f21707.c5a098"]]},{"id":"30f21707.c5a098","type":"function","z":"66107877.760ba8","name":"Format timestamp","func":"// Create a Date object from the payload\nvar date = new Date(msg.payload);\n// Change the payload to be a formatted Date string\nmsg.payload = date.toString('Hello NodeJS');\n// Return the message so it can be sent on\nreturn msg;","outputs":1,"noerr":0,"x":170,"y":160,"wires":[["cfccce10.6a6ee"]]},{"id":"7a14817.c6d3b8","type":"inject","z":"66107877.760ba8","name":"程式執行的頻率","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":340,"wires":[["a4ed1ef5.7db44"]]},{"id":"a4ed1ef5.7db44","type":"http request","z":"66107877.760ba8","name":"英國電力開放式資料","method":"GET","url":"http://realtimeweb-prod.nationalgrid.com/SystemData.aspx","tls":"","x":210,"y":420,"wires":[["5a52eb93.3f87d4"]]},{"id":"5a52eb93.3f87d4","type":"function","z":"66107877.760ba8","name":"英國電力附載顯示","func":"// does a simple text extract parse of the http output to provide an\n// object containing the uk power demand, frequency and time\n\nif (~msg.payload.indexOf('<span')) {\n    var dem = msg.payload.split('Demand:')[1].split(\"MW\")[0];\n    var fre = msg.payload.split('Frequency:')[1].split(\"Hz\")[0];\n// 電綠\n\n\n    msg.payload = {};\n    msg.payload.demand = parseInt(dem.split(\">\")[1].split(\"<\")[0]);\n    msg.payload.frequency = parseFloat(fre.split(\">\")[1].split(\"<\")[0]);\n    \n    msg2 = {};\n    msg2.payload = (msg.payload.frequency >= 50) ? true : false;\n\n    return [msg,msg2];\n}\n\nreturn null;","outputs":"2","noerr":0,"x":305.00001525878906,"y":476,"wires":[["c96c764.0925a88"],["cda0a9af.112ab8"]]},{"id":"c96c764.0925a88","type":"debug","z":"66107877.760ba8","name":"顯示供電數據","active":true,"console":"false","complete":"payload","x":550,"y":420,"wires":[]},{"id":"cda0a9af.112ab8","type":"debug","z":"66107877.760ba8","name":"判斷有無超過負荷","active":true,"console":"false","complete":"payload","x":550,"y":480,"wires":[]},{"id":"3b042868.2795c8","type":"comment","z":"66107877.760ba8","name":"從Web的OpenData抓數值下來","info":"","x":160,"y":300,"wires":[]},{"id":"5a072586.d7e9bc","type":"comment","z":"66107877.760ba8","name":"測試Node-red 循環","info":"","x":120,"y":60,"wires":[]},{"id":"e46dcf67.79b85","type":"comment","z":"66107877.760ba8","name":"LED 閃爍測試","info":"","x":90,"y":600,"wires":[]},{"id":"8c67a4e6.eae038","type":"trigger","z":"66107877.760ba8","op1":"1","op2":"0","op1type":"val","op2type":"val","duration":"250","extend":"false","units":"ms","name":"","x":380,"y":740,"wires":[["a3d6e41a.aabd88","dbfe891c.06da98"]]},{"id":"a3d6e41a.aabd88","type":"function","z":"66107877.760ba8","name":"","func":"if (msg.payload == \"off\")\n\tcontext.state = 0;\nif (msg.payload == \"on\")\n\tcontext.state = 1;\n\nif (context.state == 1)\n{\n\tif (msg.payload == 0)\n\t\treturn msg;\n\telse\n\t\treturn;\n}\nelse\n\treturn;","outputs":1,"x":464.00001525878906,"y":829.0000605583191,"wires":[["8b9a42ec.d1f99"]]},{"id":"8b9a42ec.d1f99","type":"delay","z":"66107877.760ba8","name":"","pauseType":"delay","timeout":"250","timeoutUnits":"milliseconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":691.0000076293945,"y":819.000020980835,"wires":[["8c67a4e6.eae038"]]},{"id":"571df0db.15f5b","type":"switch","z":"66107877.760ba8","name":"","property":"payload","rules":[{"t":"eq","v":"on"},{"t":"eq","v":"off"}],"checkall":"true","outputs":2,"x":161,"y":806,"wires":[["a3d6e41a.aabd88","8c67a4e6.eae038"],["a3d6e41a.aabd88"]]},{"id":"dbfe891c.06da98","type":"rpi-gpio out","z":"66107877.760ba8","name":"LED","pin":"12","set":"","level":"0","out":"out","x":623,"y":709,"wires":[]},{"id":"6117b5ca.0b8cac","type":"inject","z":"66107877.760ba8","name":"On","topic":"","payload":"on","payloadType":"str","repeat":"","crontab":"","once":false,"x":101,"y":692,"wires":[["571df0db.15f5b","200ad44f.ee894c"]]},{"id":"200ad44f.ee894c","type":"delay","z":"66107877.760ba8","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":255,"y":639,"wires":[["1fd250b4.6043df"]]},{"id":"1fd250b4.6043df","type":"change","z":"66107877.760ba8","name":"Switch off","rules":[{"t":"set","p":"payload","pt":"msg","to":"off","tot":"str"}],"x":422,"y":635,"wires":[["571df0db.15f5b"]]},{"id":"31cc24ef.0f455c","type":"inject","z":"66107877.760ba8","name":"Tick every 5 secs","topic":"test","payload":"","payloadType":"date","repeat":"5","crontab":"","once":true,"x":210,"y":1040,"wires":[["96afd53.0e0c228"]]},{"id":"bb24ccf5.d1cdb","type":"websocket out","z":"66107877.760ba8","name":"","server":"faed9e8a.4e18c","client":"","x":630,"y":1040,"wires":[]},{"id":"5185928d.f4e6ec","type":"http response","z":"66107877.760ba8","name":"","x":590,"y":980,"wires":[]},{"id":"6a65bba6.ff6074","type":"http in","z":"66107877.760ba8","name":"","url":"/simple","method":"get","swaggerDoc":"","x":150,"y":980,"wires":[["c49d4e3.472bfb"]]},{"id":"c49d4e3.472bfb","type":"template","z":"66107877.760ba8","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/simple\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":390,"y":980,"wires":[["5185928d.f4e6ec"]]},{"id":"96afd53.0e0c228","type":"function","z":"66107877.760ba8","name":"format time nicely","func":"msg.payload = Date(msg.payload).toString();\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":1040,"wires":[["bb24ccf5.d1cdb"]]},{"id":"f7f117f6.9ad4f8","type":"websocket in","z":"66107877.760ba8","name":"","server":"faed9e8a.4e18c","client":"","x":430,"y":1080,"wires":[["3efefd6b.cd5752"]]},{"id":"3efefd6b.cd5752","type":"debug","z":"66107877.760ba8","name":"","active":true,"console":"false","complete":"false","x":670,"y":1080,"wires":[]},{"id":"a17cd152.77713","type":"comment","z":"66107877.760ba8","name":"Simple Web page with live data updates via websocket","info":"使用 websocket 即時 更新 Data\n的簡單網頁\n具有click 反應","x":280,"y":940,"wires":[]},{"id":"5f9812cb.e5906c","type":"inject","z":"66107877.760ba8","name":"Tick every 5 secs","topic":"test","payload":"","payloadType":"date","repeat":"5","crontab":"","once":true,"x":210,"y":1280,"wires":[["78068399.0a095c"]]},{"id":"7566b2ad.5e60bc","type":"websocket out","z":"66107877.760ba8","name":"led","server":"faed9e8a.4e18c","client":"","x":610,"y":1280,"wires":[]},{"id":"5344eb8b.ab8124","type":"http response","z":"66107877.760ba8","name":"","x":590,"y":1220,"wires":[]},{"id":"3977be9a.524382","type":"http in","z":"66107877.760ba8","name":"","url":"/simpleled","method":"get","swaggerDoc":"","x":160,"y":1220,"wires":[["80e07eb4.9fd3d"]]},{"id":"80e07eb4.9fd3d","type":"template","z":"66107877.760ba8","name":"Simple Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>simpleled Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simpleled\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simpleled\",\"ws/simpleled\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>simpleled Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"on\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","x":390,"y":1220,"wires":[["5344eb8b.ab8124"]]},{"id":"78068399.0a095c","type":"function","z":"66107877.760ba8","name":"format time nicely","func":"msg.payload = Date(msg.payload).toString();\nreturn msg;","outputs":1,"noerr":0,"x":430,"y":1280,"wires":[["7566b2ad.5e60bc"]]},{"id":"c0737e84.b4dbb","type":"websocket in","z":"66107877.760ba8","name":"","server":"faed9e8a.4e18c","client":"","x":430,"y":1340,"wires":[["28596740.f9ba98","2cba25b0.f0089a","242acec4.c3ae92"]]},{"id":"28596740.f9ba98","type":"debug","z":"66107877.760ba8","name":"","active":true,"console":"false","complete":"false","x":650,"y":1340,"wires":[]},{"id":"675b64a9.1ce42c","type":"trigger","z":"66107877.760ba8","op1":"1","op2":"0","op1type":"val","op2type":"val","duration":"250","extend":"false","units":"ms","name":"","x":692.0000305175781,"y":1518.0000457763672,"wires":[["2d3c2543.9cad0a","468623d4.060dfc"]]},{"id":"2d3c2543.9cad0a","type":"function","z":"66107877.760ba8","name":"","func":"if (msg.payload == \"off\")\n\tcontext.state = 0;\nif (msg.payload == \"on\")\n\tcontext.state = 1;\n\nif (context.state == 1)\n{\n\tif (msg.payload == 0)\n\t\treturn msg;\n\telse\n\t\treturn;\n}\nelse\n\treturn;","outputs":1,"x":658.0000915527344,"y":1634.0000495910645,"wires":[["f2c42c6f.d30fe"]]},{"id":"f2c42c6f.d30fe","type":"delay","z":"66107877.760ba8","name":"","pauseType":"delay","timeout":"250","timeoutUnits":"milliseconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":900.0000953674316,"y":1629.000171661377,"wires":[["675b64a9.1ce42c"]]},{"id":"242acec4.c3ae92","type":"switch","z":"66107877.760ba8","name":"","property":"payload","rules":[{"t":"eq","v":"on"},{"t":"eq","v":"off"}],"checkall":"true","outputs":2,"x":358.0000190734863,"y":1543.0000476837158,"wires":[["2d3c2543.9cad0a","675b64a9.1ce42c"],["2d3c2543.9cad0a"]]},{"id":"468623d4.060dfc","type":"rpi-gpio out","z":"66107877.760ba8","name":"LED","pin":"12","set":"","level":"0","out":"out","x":887.0000305175781,"y":1487.0001049041748,"wires":[]},{"id":"2cba25b0.f0089a","type":"delay","z":"66107877.760ba8","name":"","pauseType":"delay","timeout":"5","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":675,"y":1399,"wires":[["5f042cf7.dc5b54"]]},{"id":"5f042cf7.dc5b54","type":"change","z":"66107877.760ba8","name":"Switch off","rules":[{"t":"set","p":"payload","pt":"msg","to":"off","tot":"str"}],"x":842,"y":1395,"wires":[["242acec4.c3ae92"]]},{"id":"faed9e8a.4e18c","type":"websocket-listener","z":"66107877.760ba8","path":"/ws/simpleled","wholemsg":"false"}]
